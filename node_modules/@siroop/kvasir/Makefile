# -----------------------------------------------------------------------------
# DEVELOPMENT
# -----------------------------------------------------------------------------
VERSION := $(or ${GO_PIPELINE_LABEL}, LOCAL)
SSH_KEY := $(if ${GO_PIPELINE_LABEL},/data/ci-config/resiroop_deploy,~/.ssh/id_rsa)
BASE_IMAGE := 'projectthor/kvasir-base'

.PHONY: bootstrap
bootstrap: copy_env create_network

.PHONY: copy_env
copy_env:
	@cp .env.example .env

.PHONY: create_network
create_network:
	@docker network create siroop || echo 'network creation failed, but continuing'

.PHONY: build
build:
	@docker-compose build

.PHONY: build_base
build_base:
	@docker pull ${BASE_IMAGE} || true
	cd ops/base && docker build -t ${BASE_IMAGE} .
	@docker run --rm=true -w `pwd`/ -v `pwd`:`pwd` -v ${SSH_KEY}:/root/.ssh/id_rsa ${BASE_IMAGE} /bin/bash -c "yarn install"

.PHONY: push_base
push_base:
	@docker push ${BASE_IMAGE}

.PHONY: build_ci
build_ci: build_base
	sh ops/create-rev.sh
	@docker run --rm=true -w `pwd`/ -v `pwd`:`pwd` ${BASE_IMAGE} /bin/bash -c "yarn run build"
	@docker build -f ops/styleguide/Dockerfile -t projectthor/kvasir:${VERSION} .

.PHONY: push_ci
push_ci:
	@docker push projectthor/kvasir:${VERSION}

.PHONY: force_build
force_build:
	@docker-compose build --force-rm --no-cache --pull

.PHONY: start
start:
	@docker-compose up -d

.PHONY: dev
dev: start
	@docker-compose run kvasir yarn run develop

.PHONY: test
test:
	@docker-compose run kvasir yarn test

.PHONY: lint
lint:
	@docker-compose run kvasir yarn run lint

.PHONY: stop
stop:
	@docker-compose down

.PHONY: logs
logs:
	@docker-compose logs -f --tail 20

.PHONY: teardown
teardown:
	@docker-compose down

.PHONY: clean
clean:
	rm -rf public vendor node_modules rev.txt
	@docker rmi -f ${BASE_IMAGE} || true
