//  =====================
//
//  Font line-heights and sizes generation and mapping for all Siroop
//
// =====================

// Map for all typography sizes
$text-sizes: (
	default: (14, 20),
	smallest: (11, 16),
	xx-small: (12, 16),
	x-small: (13, 16),
	small: (14, 20),
	medium: (16, 24),
	large: (20, 28),
	x-large: (24, 32),
	xx-large: (32, 40),
	larger: (40, 52),
	largest: (72, 80),
);

// New mixin for text
@function calculate-rem($size) {
	$rem-size: ($size * 1px) / 16px;

	@return $rem-size * 1rem;
}

@mixin text($name: default) {
	@if (map-has-key($text-sizes, $name)) {
		line-height: nth(map-get($text-sizes, $name), 2) + px;
		font-size: nth(map-get($text-sizes, $name), 1) + px; // fallback ie
		font-size: calculate-rem(nth(map-get($text-sizes, $name), 1)); /* stylelint-disable-line declaration-block-no-duplicate-properties */
	}

	@else {
		line-height: nth(map-get($text-sizes, default), 2) + px;
		font-size: nth(map-get($text-sizes, default), 1) + px; // fallback ie
		font-size: calculate-rem(nth(map-get($text-sizes, default), 1)); /* stylelint-disable-line declaration-block-no-duplicate-properties */
	}
}

$primary-fonts: (
	default: (400, normal),
	thin: (100, normal),
	light: (300, normal),
	regular: (400, normal),
	medium: (500, normal),
	bold: (700, normal),
	italic: (400, italic),
);

$secondary-fonts: (
	default: (400, normal),
	light: (300, normal),
	regular: (400, normal),
);

$tertiary-fonts: (
	default: (300, normal),
	regular: (300, normal),
	bold: (400, normal),
	italic: (400, italic),
);

// New mixin for fonts
@mixin font($font: primary, $name: default) {
	font-family: $font-family-fallback;
	letter-spacing: -.5px;

	@if map-has-key($primary-fonts, $name) and $font == primary {
		font-weight: nth(map-get($primary-fonts, $name), 1);
		font-style: nth(map-get($primary-fonts, $name), 2);

		.wf-active & {
			font-family: $primary-font;
			letter-spacing: normal;
		}
	}

	@else if map-has-key($secondary-fonts, $name) and $font == secondary {
		font-weight: nth(map-get($secondary-fonts, $name), 1);
		font-style: nth(map-get($secondary-fonts, $name), 2);

		.wf-active & {
			font-family: $secondary-font;
			letter-spacing: normal;
		}
	}

	@else if map-has-key($tertiary-fonts, $name) and $font == tertiary {
		font-weight: nth(map-get($tertiary-fonts, $name), 1);
		font-style: nth(map-get($tertiary-fonts, $name), 2);

		@if $name == 'italic' {
			font-family: $tertiary-font-italic;
		}

		@else {
			.wf-active & {
				font-family: $tertiary-font;
				letter-spacing: normal;
			}
		}
	}
}
