const selectors = {
	category: '.js-t-faq__category',
	question: '.js-t-faq__item',
	link: '.js-t-faq__link',
};

const dataAttr = {
	questionTag: 'data-faq-tag',
};

const activeCategory = 'active';

class Faq {
	constructor() {
		this.categories = document.querySelectorAll(selectors.category);
		this.questions = document.querySelectorAll(selectors.question);
		this.links = document.querySelectorAll(selectors.link);
		this.setInitState();
	}

	setInitState() {
		// If no category is chosen, show all the questions
		const urlHashValue = window.location.hash.replace('#', '');

		if (urlHashValue !== '') {
			this.highlightCategoryFromValue(urlHashValue);
		}

		this.showActiveItemsFromValue(urlHashValue);
		this.registerClicksOnCategoryList();
		this.registerClicksOnLinkList();
	}

	registerClicksOnCategoryList() {
		this.nodeListHelper(this.links, this.registerClicks.bind(this), null);
	}

	registerClicksOnLinkList() {
		this.nodeListHelper(this.categories, this.registerClicks.bind(this), null);
	}

	showActiveItemsFromValue(value) {
		this.nodeListHelper(this.categories, this.highlightCategory, value);
	}

	highlightCategoryFromValue(value) {
		this.nodeListHelper(this.questions, this.showItems, value);
	}

	registerClicks(el) {
		el.addEventListener('click', evt => this.onCategoryClick(evt));
	}

	onCategoryClick(evt) {
		const valueOfClickedElement = evt.target.getAttribute('href').replace('#', '');
		this.showActiveItemsFromValue(valueOfClickedElement);
		this.highlightCategoryFromValue(valueOfClickedElement);
	}

	/* eslint-disable class-methods-use-this */
	nodeListHelper(itemsToBeLooped, callback, callbackArgs) {
		for (let i = 0; i < itemsToBeLooped.length; i += 1) {
			const el = itemsToBeLooped[i];
			callback(el, callbackArgs);
		}
	}

	highlightCategory(category, currentCategoryTag) {
		const categoryTag = category.getAttribute('href').replace('#', '');

		if (currentCategoryTag !== categoryTag) {
			category.classList.remove(activeCategory);
		} else {
			category.classList.add(activeCategory);
		}
	}

	showItems(question, categoryTag) {
		const questionTag = question.getAttribute(dataAttr.questionTag);

		if (questionTag !== categoryTag) {
			question.setAttribute('hidden', '');
		} else {
			question.removeAttribute('hidden', '');
		}
	}
	/* eslint-enable class-methods-use-this */
}

export default Faq;
