const selectors = {
	isValidationEnabled: '[data-validate]',
	inputDay: '.js-m-form-field-date__input-day',
	inputMonth: '.js-m-form-field-date__input-month',
	inputYear: '.js-m-form-field-date__input-year',
};

class FormFieldDate {
	constructor($el) {
		this.$el = $el;
		this.isValidationEnabled = $el.is(selectors.isValidationEnabled);
		this.$inputDay = $el.find(selectors.inputDay);
		this.$inputMonth = $el.find(selectors.inputMonth);
		this.$inputYear = $el.find(selectors.inputYear);

		this.$inputDay.on('input', this.onInputDayChange.bind(this));
		this.$inputMonth.on('input', this.onInputMonthChange.bind(this));
		this.$inputYear.on('input', this.onInputYearChange.bind(this));

		this.$inputDay.on('click', this.onInputDayClick.bind(this));
		this.$inputMonth.on('click', this.onInputMonthClick.bind(this));
		this.$inputYear.on('click', this.onInputYearClick.bind(this));
	}

	isNumeric(n) { // eslint-disable-line class-methods-use-this
		return !isNaN(parseFloat(n)) && isFinite(n) && n >= 0;
	}

	selectInputDay() {
		this.$inputDay.focus();
	}

	selectInputMonth() {
		this.$inputMonth.focus();
	}

	selectInputYear() {
		this.$inputYear.focus();
	}

	onInputDayChange(ev) {
		if (!this.isNumeric(ev.target.value)) {
			// eslint-disable-next-line
			ev.target.value = ev.target.value.substr(0, ev.target.value.length - 1);
		}

		if (ev.target.value.length === (ev.target.maxLength || 2)) {
			this.selectInputMonth();
		}
	}

	onInputMonthChange(ev) {
		if (!this.isNumeric(ev.target.value)) {
			// eslint-disable-next-line
			ev.target.value = ev.target.value.substr(0, ev.target.value.length - 1);
		}

		if (ev.target.value.length === (ev.target.maxLength || 2)) {
			this.selectInputYear();
		}
	}

	onInputYearChange(ev) { // eslint-disable-line class-methods-use-this
		if (!this.isNumeric(ev.target.value)) {
			// eslint-disable-next-line
			ev.target.value = ev.target.value.substr(0, ev.target.value.length - 1);
		}

		if (parseInt(ev.target.value.length, 10) > parseInt(ev.target.maxLength, 10)) {
			// eslint-disable-next-line
			ev.target.value = ev.target.value.substr(0, parseInt(ev.target.maxLength, 10) );
		}
		return true;
	}

	onInputDayClick(ev) {
		if (ev.target.value === '' && this.$inputMonth.val() === '' && this.$inputYear.val() === '') {
			this.selectInputDay();
		}
	}

	onInputMonthClick(ev) {
		if (ev.target.value === '' && this.$inputDay.val() === '' && this.$inputYear.val() === '') {
			this.selectInputDay();
		}
	}

	onInputYearClick(ev) { // eslint-disable-line class-methods-use-this
		if (ev.target.value === '' && this.$inputDay.val() === '' && this.$inputMonth.val() === '') {
			this.selectInputDay();
		}
	}
}

export default FormFieldDate;
