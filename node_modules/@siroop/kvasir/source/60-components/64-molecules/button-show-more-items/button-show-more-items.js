const state = {
	hidden: 'is-hidden',
};

const selectors = {
	item: 'data-show-more-items',
	initialItemsNb: 'data-initial-items',
	expandButton: '.js-m-button-show-more-items__expand-button',
	collapseButton: '.js-m-button-show-more-items__collapse-button',
};


class ButtonShowMoreItems {
	constructor($el) {
		this.el = $el.get(0); // preparation for easy removal of query later
		this.items = document.querySelectorAll(`.${this.el.getAttribute(selectors.item)}`);
		this.expandButton = this.el.querySelector(selectors.expandButton);
		this.collapseButton = this.el.querySelector(selectors.collapseButton);
		this.initialItemsNb = parseInt(this.el.getAttribute(selectors.initialItemsNb), 10);

		if (this.el.hasAttribute(selectors.item) && this.initialItemsNb < this.items.length) {
			[].forEach.call(this.items, (item, index) => {
				if (index >= this.initialItemsNb) {
					item.classList.add(state.hidden);
				}
			});

			this.expandButton.classList.remove(state.hidden);
			this.expandButton.addEventListener('click', () => this.expand());
			this.collapseButton.addEventListener('click', () => this.collapse());
		}
	}

	expand() {
		[].forEach.call(this.items, (item) => {
			item.classList.remove(state.hidden);
		});
		this.expandButton.classList.add(state.hidden);
		this.collapseButton.classList.remove(state.hidden);
	}

	collapse() {
		[].forEach.call(this.items, (item, index) => {
			if (index >= this.initialItemsNb) {
				item.classList.add(state.hidden);
			}
		});
		this.collapseButton.classList.add(state.hidden);
		this.expandButton.classList.remove(state.hidden);
	}
}

export default ButtonShowMoreItems;
