const selectors = {
	loadingSpinner: '.js-m-button-loading__loading-spinner',
	buttonIcon: '.js-m-button-loading__button-icon',
};

class ButtonLoading {
	constructor($el) {
		this.$el = $el;
		this.$loadingSpinner = $el.find(selectors.loadingSpinner);
		this.$buttonIcon = $el.find(selectors.buttonIcon);
		this.$button = $el;
		this.$button.on('change', this.startLoading.bind(this));
	}

	startLoading() {
		this.$loadingSpinner.removeClass('is-hidden');
		this.$buttonIcon.addClass('is-hidden');
		this.disableButtonDeferred();
	}

	disableButtonDeferred() {
		const button = this.$button;
		setTimeout(() => button.prop('disabled', true), 0);
	}
}

export default ButtonLoading;


// To start loading: $('.js-m-button-loading__button').trigger('change');
