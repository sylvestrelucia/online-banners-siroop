import FilterPanel from './filter-panel';

describe('FilterPanel', () => {
	let $el;
	let filterPanel;

	beforeEach(() => {
		jasmine.getFixtures().fixturesPath = 'base/fixtures';
		loadFixtures('filter-panel.fix.html');
		$el = $('.o-filter-panel');
		$el.prepend('<button class="o-filter-panel__button">Open</button>');
		$el.find('.js-o-filter-panel__panel').eq(0).attr('data-trigger-by', 'o-filter-panel__button');
	});

	describe('constructor', () => {
		beforeEach(() => {
			filterPanel = new FilterPanel($el);
		});

		it('should have a constructor method', () => {
			expect(filterPanel.constructor).toBeDefined();
		});

		it('should have a element in dom', () => {
			expect($el).toBeInDOM();
		});

		it('should be an instance of "FilterPanel"', () => {
			expect(filterPanel instanceof FilterPanel).toBeTruthy();
		});

		it('should have a data-trigger-by attribute', () => {
			expect($('.js-o-filter-panel__panel').eq(0)).toHaveAttr('data-trigger-by', 'o-filter-panel__button');
		});
	});

	describe('registerEventListeners', () => {
		beforeEach(() => {
			spyOn(FilterPanel.prototype, 'openPanel');
			spyOn(FilterPanel.prototype, 'openSubPanel');
			spyOn(FilterPanel.prototype, 'closePanel');
			filterPanel = new FilterPanel($el);
		});

		it('should have a registerEventListeners method', () => {
			expect(filterPanel.registerEventListeners).toBeDefined();
		});

		it('expects to have 1 click events on .js-o-filter-panel__item-link', () => {
			$('.o-filter-panel__button').click();
			const numberOfEvents = $._data($('.js-o-filter-panel__item-link').get(0), 'events').click.length;
			expect(numberOfEvents).toEqual(1);
		});

		it('expects toogle to be invoked by clicking on .js-o-filter-panel__item-link', () => {
			$('.js-o-filter-panel__item-link').trigger('click');
			expect(filterPanel.openSubPanel).toHaveBeenCalled();
		});

		it('expects to have 1 click events on .o-filter-panel__button', () => {
			$('.o-filter-panel__button').click();
			const numberOfEvents = $._data($('.o-filter-panel__button').get(0), 'events').click.length;
			expect(numberOfEvents).toEqual(1);
		});

		it('expects toogle to be invoked by clicking on .o-filter-panel__button', () => {
			$('.o-filter-panel__button').trigger('click');
			expect(filterPanel.openPanel).toHaveBeenCalled();
		});

		it('expects to have 1 click events on .js-o-filter-panel__back', () => {
			$('.js-o-filter-panel__back').click();
			const numberOfEvents = $._data($('.js-o-filter-panel__back').get(0), 'events').click.length;
			expect(numberOfEvents).toEqual(1);
		});

		it('expects toogle to be invoked by clicking on .js-o-filter-panel__back', () => {
			$('.js-o-filter-panel__back').trigger('click');
			expect(filterPanel.closePanel).toHaveBeenCalled();
		});
	});

	describe('openPanel', () => {
		beforeEach(() => {
			spyOn(FilterPanel.prototype, 'openPanel').and.callThrough();
			spyOn(FilterPanel.prototype, 'closeAllPanel').and.callThrough();
			spyOn(FilterPanel.prototype, 'onFocusPanel').and.callThrough();
			filterPanel = new FilterPanel($el);
			$('.o-filter-panel__button').click();
		});

		it('should have a openPanel method', () => {
			expect(filterPanel.openPanel).toBeDefined();
		});

		it('should open a panel', () => {
			expect(filterPanel.openPanel).toHaveBeenCalled();
			expect($('.js-o-filter-panel__panel').eq(0)).toHaveClass('is-open');
			expect($('body')).toHaveClass('is-unscrollable');
		});

		it('should open a subpanel', () => {
			$('.js-o-filter-panel__item-link').eq(0).click();
			expect(filterPanel.closeAllPanel).toHaveBeenCalled();
			expect($('.js-o-filter-panel__panel').eq(0)).toHaveClass('is-inactive');
			expect($('.js-o-filter-panel__panel').eq(1)).toHaveClass('is-open');
		});
	});

	describe('closePanel', () => {
		beforeEach(() => {
			spyOn(FilterPanel.prototype, 'closePanel').and.callThrough();
			spyOn(FilterPanel.prototype, 'onFocusPanel').and.callThrough();
			filterPanel = new FilterPanel($el);
			$('.o-filter-panel__button').click();
		});

		it('should have a closePanel method', () => {
			expect(filterPanel.closePanel).toBeDefined();
		});

		it('should have a closeAllPanel method', () => {
			expect(filterPanel.closeAllPanel).toBeDefined();
		});

		it('should close a panel', () => {
			$('.js-o-filter-panel__panel').eq(0).find('.js-o-filter-panel__back').click();
			expect($('.js-o-filter-panel__panel').eq(0)).not.toHaveClass('is-open');
			expect(filterPanel.closePanel).toHaveBeenCalled();
		});

		it('should close a subpanel', () => {
			$('.js-o-filter-panel__item-link').eq(0).click();
			$('.js-o-filter-panel__item-link').eq(0).next().find('.js-o-filter-panel__back')
			.click();
			expect($('.js-o-filter-panel__item-link').eq(0).next().find('.js-o-filter-panel__panel')).not.toHaveClass('is-open');
			expect(filterPanel.closePanel).toHaveBeenCalled();
		});
	});

	describe('onFocusPanel', () => {
		beforeEach(() => {
			spyOn(FilterPanel.prototype, 'onFocusPanel').and.callThrough();
			filterPanel = new FilterPanel($el);
		});

		it('should have a onFocusPanel method', () => {
			expect(filterPanel.onFocusPanel).toBeDefined();
		});

		it('should have been called when close a panel', () => {
			$('.o-filter-panel__button').click();
			const event = {
				currentTarget: $('.js-o-filter-panel__panel').eq(0),
			};
			filterPanel.onFocusPanel(event);
			expect(filterPanel.onFocusPanel).toHaveBeenCalled();
		});

		it('should have been called when close a subpanel', () => {
			$('.o-filter-panel__button').click();
			$('.js-o-filter-panel__item-link').eq(0).click();
			const event = {
				currentTarget: $('.js-o-filter-panel__panel').eq(1),
			};
			filterPanel.onFocusPanel(event);
			expect(filterPanel.onFocusPanel).toHaveBeenCalled();
		});
	});

	describe('resizeWindow', () => {
		beforeEach(() => {
			filterPanel = new FilterPanel($el);
			$('.o-filter-panel__button').click();
		});

		xit('should close the panels', () => {
			expect($('.js-o-filter-panel__panel').eq(0)).not.toHaveClass('is-open');
		});
	});
});
