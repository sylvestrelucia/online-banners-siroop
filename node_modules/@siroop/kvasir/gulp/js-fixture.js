const through = require('through2');
const path = require('path');
const fractal = require('../fractal.js'); // import the Fractal instance configured in the fractal.js file
const fs = require('fs');

const components = fractal.components;
const sourcePath = path.resolve('./test/fixtures');

function writeFile(file, content) {
	const promise = new Promise((resolve, reject) => {
		const filePath = `${sourcePath}/${file.name}.fix.html`;
		fs.writeFile(filePath, content, (err) => {
			if (err) {
				reject(fractal.cli.console.error(`Error rendering ${filePath} - ${err.message}`));
			} else {
				resolve(fractal.cli.console.success(`Component ${file.name} rendered to ${filePath}`));
			}
		});
	});
	return promise;
}

module.exports = (gulp, plugins, options) => () => {
	const stream = gulp.src(options.paths.js.test)
		.pipe(through.obj((chunk, enc, cb) => {
			const name = path.basename(chunk.path, '.spec.js');
			components.load().then(() => {
				components.flatten().forEach((component) => {
					if (component.name === name) {
						component.render().then((html) => {
							writeFile(component, html).then(() => cb(null, chunk));
						});
					}
				});
			});
		}));
	return stream;
};
